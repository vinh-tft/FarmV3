const express = require('express');
const router = express.Router();
const AnimalController = require('../Controllers/Animal.Controller');

/**
 * @swagger
 * tags:
 *   name: Animals
 *   description: API qu·∫£n l√Ω ƒë·ªông v·∫≠t/n√¥ng s·∫£n trong trang tr·∫°i
 */

/**
 * @swagger
 * /api/animals:
 *   post:
 *     summary: T·∫°o ƒë·ªông v·∫≠t/n√¥ng s·∫£n m·ªõi
 *     tags: [Animals]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - name
 *               - type
 *             properties:
 *               name:
 *                 type: string
 *               type:
 *                 type: string
 *                 enum: [vegetable, poultry, livestock]
 *               quantity:
 *                 type: number
 *               description:
 *                 type: string
 *               imageUrl:
 *                 type: string
 *     responses:
 *       201:
 *         description: T·∫°o th√†nh c√¥ng
 *       400:
 *         description: D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá
 */
router.post('/', AnimalController.create);

/**
 * @swagger
 * /api/animals:
 *   get:
 *     summary: L·∫•y danh s√°ch t·∫•t c·∫£ ƒë·ªông v·∫≠t/n√¥ng s·∫£n
 *     tags: [Animals]
 *     responses:
 *       200:
 *         description: Th√†nh c√¥ng
 */
router.get('/', AnimalController.getAll);

/**
 * @swagger
 * /api/animals/search:
 *   get:
 *     summary: T√¨m ki·∫øm ƒë·ªông v·∫≠t/n√¥ng s·∫£n
 *     tags: [Animals]
 *     parameters:
 *       - in: query
 *         name: name
 *         schema:
 *           type: string
 *         description: T√™n ƒë·ªông v·∫≠t (t√¨m g·∫ßn ƒë√∫ng)
 *       - in: query
 *         name: type
 *         schema:
 *           type: string
 *           enum: [vegetable, poultry, livestock]
 *         description: Lo·∫°i ƒë·ªông v·∫≠t
 *       - in: query
 *         name: farmId
 *         schema:
 *           type: number
 *         description: ID trang tr·∫°i (ki·ªÉu s·ªë, t·ª± tƒÉng ‚Äì kh√¥ng c·∫ßn truy·ªÅn khi t·∫°o)
 *     responses:
 *       200:
 *         description: Th√†nh c√¥ng
 */
router.get('/search', AnimalController.search); // üëà ƒê·∫∑t tr∆∞·ªõc :id

/**
 * @swagger
 * /api/animals/{id}:
 *   get:
 *     summary: L·∫•y th√¥ng tin ƒë·ªông v·∫≠t/n√¥ng s·∫£n theo ID
 *     tags: [Animals]
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: number
 *         description: ID c·ªßa b·∫£n ghi (farmId)
 *     responses:
 *       200:
 *         description: Th√†nh c√¥ng
 *       404:
 *         description: Kh√¥ng t√¨m th·∫•y
 */
router.get('/:id', AnimalController.getById);

/**
 * @swagger
 * /api/animals/{id}:
 *   put:
 *     summary: C·∫≠p nh·∫≠t th√¥ng tin ƒë·ªông v·∫≠t/n√¥ng s·∫£n
 *     tags: [Animals]
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: number
 *         description: ID c·ªßa b·∫£n ghi (farmId)
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               name:
 *                 type: string
 *               type:
 *                 type: string
 *                 enum: [vegetable, poultry, livestock]
 *               quantity:
 *                 type: number
 *               description:
 *                 type: string
 *               imageUrl:
 *                 type: string
 *     responses:
 *       200:
 *         description: C·∫≠p nh·∫≠t th√†nh c√¥ng
 *       400:
 *         description: L·ªói ƒë·∫ßu v√†o
 *       404:
 *         description: Kh√¥ng t√¨m th·∫•y
 */
router.put('/:id', AnimalController.update);

/**
 * @swagger
 * /api/animals/{id}:
 *   delete:
 *     summary: X√≥a ƒë·ªông v·∫≠t/n√¥ng s·∫£n theo ID
 *     tags: [Animals]
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: number
 *         description: ID b·∫£n ghi c·∫ßn x√≥a (farmId)
 *     responses:
 *       200:
 *         description: X√≥a th√†nh c√¥ng
 *       404:
 *         description: Kh√¥ng t√¨m th·∫•y
 */
router.delete('/:id', AnimalController.delete);

module.exports = router;
